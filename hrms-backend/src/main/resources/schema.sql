-- Schema for HRMS H2 in-memory database and PostgreSQL production
-- Creates tables for all entities: User, Employee, JobRequisition, Candidate, Application, OnboardingTask, etc.

-- Users table for authentication
-- Added 'email' and 'created_at' columns as per User.java model
CREATE TABLE users (
    username VARCHAR(255) NOT NULL PRIMARY KEY,
    password VARCHAR(255) NOT NULL,
    role VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE, -- Added email field
    created_at TIMESTAMP NOT NULL -- Added created_at field
);

-- Employees table (No changes needed based on the provided context, as OnboardingService now uses Candidate)
CREATE TABLE employees (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    employee_id VARCHAR(20) NOT NULL UNIQUE,
    username VARCHAR(50) UNIQUE,
    first_name VARCHAR(50) NOT NULL,
    last_name VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL UNIQUE,
    phone_number VARCHAR(20),
    department VARCHAR(50),
    designation VARCHAR(50),
    joining_date DATE,
    FOREIGN KEY (username) REFERENCES users(username)
);

-- Job Requisitions
-- Updated to match JobRequisition.java model more closely
CREATE TABLE job_requisitions (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    requisition_code VARCHAR(255) NOT NULL UNIQUE, -- Added requisition_code
    job_title VARCHAR(255) NOT NULL, -- Renamed from 'title' to 'job_title' for consistency with model
    department VARCHAR(255),
    description TEXT, -- Added description field
    status VARCHAR(50) NOT NULL, -- DRAFT, PENDING_APPROVAL, APPROVED, OPEN, CLOSED
    number_of_positions INT, -- Added number_of_positions
    posted_date DATE, -- Added posted_date
    closing_date DATE, -- Added closing_date
    hiring_manager VARCHAR(255),
    location VARCHAR(255), -- Added location field
    -- Removed created_at, updated_at, created_by if not explicitly in JobRequisition.java
    -- If you need these, add them back and ensure they are in the Java model as well.
    -- For now, keeping only fields present in your JobRequisition.java
    -- created_at TIMESTAMP NOT NULL,
    -- updated_at TIMESTAMP,
    -- created_by VARCHAR(255),
    -- FOREIGN KEY (created_by) REFERENCES users(username)
);

-- Candidates
-- Added new fields as per Candidate.java model
CREATE TABLE candidates (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    first_name VARCHAR(50) NOT NULL,
    last_name VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL UNIQUE,
    resume_path VARCHAR(255),
    job_title VARCHAR(100) NOT NULL,
    application_date DATE NOT NULL,
    status VARCHAR(50) NOT NULL, -- NEW, INTERVIEW, HIRED, REJECTED, ONBOARDING (updated length)
    
    -- New fields from Candidate.java
    address VARCHAR(255),
    date_of_birth DATE,
    gender VARCHAR(20),
    marital_status VARCHAR(20),
    nationality VARCHAR(50),
    phone_number VARCHAR(20), -- Moved from original candidates table if it was separate, ensuring it's here.
    emergency_contact_name VARCHAR(100),
    emergency_contact_phone VARCHAR(20),
    
    created_at TIMESTAMP NOT NULL -- This was already present, keeping it.
);

-- Applications
CREATE TABLE applications (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    job_requisition_id BIGINT NOT NULL,
    candidate_id BIGINT NOT NULL,
    status VARCHAR(50) NOT NULL, -- NEW, INTERVIEW, HIRED, REJECTED
    applied_at TIMESTAMP NOT NULL,
    FOREIGN KEY (job_requisition_id) REFERENCES job_requisitions(id),
    FOREIGN KEY (candidate_id) REFERENCES candidates(id)
);

-- Talent Pools
CREATE TABLE talent_pools (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    candidate_id BIGINT NOT NULL,
    pool_name VARCHAR(100) NOT NULL,
    added_at TIMESTAMP NOT NULL,
    FOREIGN KEY (candidate_id) REFERENCES candidates(id)
);

-- Onboarding Tasks
-- Changed 'employee_id' to 'candidate_id' and updated status values
CREATE TABLE onboarding_tasks (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    candidate_id BIGINT NOT NULL, -- Changed from employee_id to candidate_id
    task_name VARCHAR(100) NOT NULL,
    description TEXT,
    assigned_date TIMESTAMP NOT NULL, -- Added assigned_date
    due_date TIMESTAMP, -- Changed from DATE to TIMESTAMP for consistency with LocalDateTime in Java
    completed_date TIMESTAMP, -- Added completed_date
    status VARCHAR(50) NOT NULL, -- PENDING, IN_PROGRESS, COMPLETED, OVERDUE, CANCELLED (updated length)
    assigned_to VARCHAR(255),
    -- removed created_at as it's redundant with assigned_date for this entity
    FOREIGN KEY (candidate_id) REFERENCES candidates(id),
    FOREIGN KEY (assigned_to) REFERENCES users(username) -- Assuming assigned_to refers to a user
);

-- Audit Logs
CREATE TABLE audit_logs (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    action VARCHAR(255) NOT NULL,
    entity_type VARCHAR(50) NOT NULL,
    entity_id BIGINT NOT NULL,
    performed_by VARCHAR(255) NOT NULL,
    performed_at TIMESTAMP NOT NULL,
    FOREIGN KEY (performed_by) REFERENCES users(username)
);

-- Leave Requests
CREATE TABLE leave_requests (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    employee_id BIGINT NOT NULL,
    leave_type VARCHAR(20) NOT NULL,
    start_date DATE NOT NULL,
    end_date DATE NOT NULL,
    reason VARCHAR(255),
    status VARCHAR(20) NOT NULL,
    FOREIGN KEY (employee_id) REFERENCES employees(id)
);

-- Payrolls
CREATE TABLE payrolls (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    employee_id BIGINT NOT NULL,
    payroll_date DATE NOT NULL,
    basic_salary DECIMAL(10,2) NOT NULL,
    allowances DECIMAL(10,2),
    deductions DECIMAL(10,2),
    net_salary DECIMAL(10,2) NOT NULL,
    pf_contribution DECIMAL(10,2),
    esi_contribution DECIMAL(10,2),
    tds DECIMAL(10,2),
    payslip_status VARCHAR(20),
    FOREIGN KEY (employee_id) REFERENCES employees(id)
);

-- Trainings
CREATE TABLE trainings (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    employee_id BIGINT NOT NULL,
    training_name VARCHAR(100) NOT NULL,
    start_date DATE NOT NULL,
    end_date DATE,
    hours INT,
    trainer VARCHAR(100),
    feedback VARCHAR(255),
    status VARCHAR(20),
    FOREIGN KEY (employee_id) REFERENCES employees(id)
);

-- Exit Processes
CREATE TABLE exit_processes (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    employee_id BIGINT NOT NULL,
    exit_type VARCHAR(20) NOT NULL,
    exit_date DATE NOT NULL,
    exit_interview_notes VARCHAR(255),
    knowledge_transfer_details VARCHAR(255),
    final_settlement_status VARCHAR(20),
    FOREIGN KEY (employee_id) REFERENCES employees(id)
);

-- Loan Applications
CREATE TABLE loan_applications (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    employee_id BIGINT NOT NULL,
    loan_type VARCHAR(20) NOT NULL,
    loan_amount DECIMAL(10,2) NOT NULL,
    application_date DATE NOT NULL,
    documents VARCHAR(255),
    status VARCHAR(20) NOT NULL,
    FOREIGN KEY (employee_id) REFERENCES employees(id)
);

-- Manpower Records
CREATE TABLE manpower_records (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    employee_id BIGINT NOT NULL,
    department VARCHAR(50) NOT NULL,
    designation VARCHAR(50) NOT NULL,
    region VARCHAR(50),
    entry_date DATE NOT NULL,
    exit_date DATE,
    is_outsourced BOOLEAN NOT NULL,
    overtime_hours INT,
    FOREIGN KEY (employee_id) REFERENCES employees(id)
);

-- System Settings
CREATE TABLE system_settings (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    setting_key VARCHAR(50) NOT NULL UNIQUE,
    setting_value TEXT NOT NULL -- Changed to TEXT to allow longer values, e.g., JSON for default tasks
);
